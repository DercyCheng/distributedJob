syntax = "proto3";

package api.grpc;

option go_package = "go-job/api/grpc";

import "google/protobuf/timestamp.proto";

// 任务服务
service JobService {
  rpc CreateJob(CreateJobRequest) returns (CreateJobResponse);
  rpc GetJob(GetJobRequest) returns (GetJobResponse);
  rpc ListJobs(ListJobsRequest) returns (ListJobsResponse);
  rpc UpdateJob(UpdateJobRequest) returns (UpdateJobResponse);
  rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse);
  rpc TriggerJob(TriggerJobRequest) returns (TriggerJobResponse);
}

// 调度器服务
service SchedulerService {
  rpc RegisterWorker(RegisterWorkerRequest) returns (RegisterWorkerResponse);
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  rpc GetTask(GetTaskRequest) returns (GetTaskResponse);
  rpc ReportTaskResult(ReportTaskResultRequest) returns (ReportTaskResultResponse);
}

// 认证服务
service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse);
  rpc GetUserPermissions(GetUserPermissionsRequest) returns (GetUserPermissionsResponse);
}

// 用户管理服务
service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);
}

// 部门管理服务
service DepartmentService {
  rpc CreateDepartment(CreateDepartmentRequest) returns (CreateDepartmentResponse);
  rpc GetDepartment(GetDepartmentRequest) returns (GetDepartmentResponse);
  rpc ListDepartments(ListDepartmentsRequest) returns (ListDepartmentsResponse);
  rpc UpdateDepartment(UpdateDepartmentRequest) returns (UpdateDepartmentResponse);
  rpc DeleteDepartment(DeleteDepartmentRequest) returns (DeleteDepartmentResponse);
  rpc GetDepartmentTree(GetDepartmentTreeRequest) returns (GetDepartmentTreeResponse);
}

// 角色管理服务
service RoleService {
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
  rpc GetRole(GetRoleRequest) returns (GetRoleResponse);
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse);
  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse);
  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse);
  rpc AssignPermissions(AssignPermissionsRequest) returns (AssignPermissionsResponse);
}

// 权限管理服务
service PermissionService {
  rpc CreatePermission(CreatePermissionRequest) returns (CreatePermissionResponse);
  rpc GetPermission(GetPermissionRequest) returns (GetPermissionResponse);
  rpc ListPermissions(ListPermissionsRequest) returns (ListPermissionsResponse);
  rpc UpdatePermission(UpdatePermissionRequest) returns (UpdatePermissionResponse);
  rpc DeletePermission(DeletePermissionRequest) returns (DeletePermissionResponse);
  rpc GetPermissionTree(GetPermissionTreeRequest) returns (GetPermissionTreeResponse);
}

// AI 调度服务
service AISchedulerService {
  rpc AnalyzeJob(AnalyzeJobRequest) returns (AnalyzeJobResponse);
  rpc OptimizeSchedule(OptimizeScheduleRequest) returns (OptimizeScheduleResponse);
  rpc GetAIRecommendations(GetAIRecommendationsRequest) returns (GetAIRecommendationsResponse);
}

// MCP 服务
service MCPService {
  rpc ListTools(ListToolsRequest) returns (ListToolsResponse);
  rpc CallTool(CallToolRequest) returns (CallToolResponse);
  rpc GetResources(GetResourcesRequest) returns (GetResourcesResponse);
}

// 任务定义
message Job {
  string id = 1;
  string name = 2;
  string description = 3;
  string cron = 4;
  string command = 5;
  map<string, string> params = 6;
  bool enabled = 7;
  int32 retry_attempts = 8;
  int32 timeout = 9;
  int32 priority = 10;
  string department_id = 11;
  google.protobuf.Timestamp created_at = 12;
  google.protobuf.Timestamp updated_at = 13;
  string created_by = 14;
  Department department = 15;
  User creator = 16;
  repeated AISchedule ai_schedules = 17;
}

// 任务执行记录
message JobExecution {
  string id = 1;
  string job_id = 2;
  string worker_id = 3;
  ExecutionStatus status = 4;
  google.protobuf.Timestamp started_at = 5;
  google.protobuf.Timestamp finished_at = 6;
  string output = 7;
  string error = 8;
  int32 exit_code = 9;
}

// 工作节点
message Worker {
  string id = 1;
  string name = 2;
  string ip = 3;
  int32 port = 4;
  WorkerStatus status = 5;
  int32 capacity = 6;
  int32 current_load = 7;
  google.protobuf.Timestamp last_heartbeat = 8;
  map<string, string> metadata = 9;
}

// 用户定义
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string real_name = 4;
  string phone = 5;
  string avatar = 6;
  string status = 7;
  string department_id = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  google.protobuf.Timestamp last_login_at = 11;
  Department department = 12;
  repeated Role roles = 13;
}

// 部门定义
message Department {
  string id = 1;
  string name = 2;
  string code = 3;
  string description = 4;
  string parent_id = 5;
  string status = 6;
  int32 sort = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  Department parent = 10;
  repeated Department children = 11;
}

// 角色定义
message Role {
  string id = 1;
  string name = 2;
  string code = 3;
  string description = 4;
  string status = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  repeated Permission permissions = 8;
}

// 权限定义
message Permission {
  string id = 1;
  string name = 2;
  string code = 3;
  string type = 4;
  string resource = 5;
  string action = 6;
  string parent_id = 7;
  string path = 8;
  string icon = 9;
  int32 sort = 10;
  string status = 11;
  google.protobuf.Timestamp created_at = 12;
  google.protobuf.Timestamp updated_at = 13;
  Permission parent = 14;
  repeated Permission children = 15;
}

// AI 调度定义
message AISchedule {
  string id = 1;
  string job_id = 2;
  string prompt_template = 3;
  string ai_response = 4;
  string strategy = 5;
  int32 priority = 6;
  string context = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

// 创建任务请求
message CreateJobRequest {
  string name = 1;
  string description = 2;
  string cron = 3;
  string command = 4;
  map<string, string> params = 5;
  int32 retry_attempts = 6;
  int32 timeout = 7;
  int32 priority = 8;
  string department_id = 9;
}

message CreateJobResponse {
  Job job = 1;
}

// 获取任务请求
message GetJobRequest {
  string id = 1;
}

message GetJobResponse {
  Job job = 1;
}

// 任务列表请求
message ListJobsRequest {
  int32 page = 1;
  int32 size = 2;
  string keyword = 3;
  bool enabled = 4;
  string department_id = 5;
  string created_by = 6;
}

message ListJobsResponse {
  repeated Job jobs = 1;
  int64 total = 2;
}

// 更新任务请求
message UpdateJobRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string cron = 4;
  string command = 5;
  map<string, string> params = 6;
  bool enabled = 7;
  int32 retry_attempts = 8;
  int32 timeout = 9;
  int32 priority = 10;
  string department_id = 11;
}

message UpdateJobResponse {
  Job job = 1;
}

// 删除任务请求
message DeleteJobRequest {
  string id = 1;
}

message DeleteJobResponse {
  bool success = 1;
}

// 触发任务请求
message TriggerJobRequest {
  string id = 1;
  map<string, string> params = 2;
}

message TriggerJobResponse {
  string execution_id = 1;
}

// 注册工作节点请求
message RegisterWorkerRequest {
  string name = 1;
  string ip = 2;
  int32 port = 3;
  int32 capacity = 4;
  map<string, string> metadata = 5;
}

message RegisterWorkerResponse {
  string worker_id = 1;
}

// 心跳请求
message HeartbeatRequest {
  string worker_id = 1;
  int32 current_load = 2;
  WorkerStatus status = 3;
}

message HeartbeatResponse {
  bool success = 1;
}

// 获取任务请求
message GetTaskRequest {
  string worker_id = 1;
  int32 capacity = 2;
}

message GetTaskResponse {
  repeated Task tasks = 1;
}

// 任务
message Task {
  string id = 1;
  string job_id = 2;
  string command = 3;
  map<string, string> params = 4;
  int32 timeout = 5;
  int32 retry_attempts = 6;
}

// 任务结果报告请求
message ReportTaskResultRequest {
  string task_id = 1;
  string worker_id = 2;
  ExecutionStatus status = 3;
  string output = 4;
  string error = 5;
  int32 exit_code = 6;
  google.protobuf.Timestamp started_at = 7;
  google.protobuf.Timestamp finished_at = 8;
}

message ReportTaskResultResponse {
  bool success = 1;
}

// 认证相关消息
message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  string token_type = 3;
  int64 expires_in = 4;
  User user = 5;
  repeated Permission permissions = 6;
}

message LogoutRequest {
  string token = 1;
}

message LogoutResponse {
  bool success = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;
}

message GetUserInfoRequest {
  string user_id = 1;
}

message GetUserInfoResponse {
  User user = 1;
}

message GetUserPermissionsRequest {
  string user_id = 1;
}

message GetUserPermissionsResponse {
  repeated Permission permissions = 1;
}

// 用户管理消息
message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string real_name = 4;
  string phone = 5;
  string department_id = 6;
  repeated string role_ids = 7;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message ListUsersRequest {
  int32 page = 1;
  int32 size = 2;
  string keyword = 3;
  string department_id = 4;
  string status = 5;
}

message ListUsersResponse {
  repeated User users = 1;
  int64 total = 2;
}

message UpdateUserRequest {
  string id = 1;
  string email = 2;
  string real_name = 3;
  string phone = 4;
  string avatar = 5;
  string department_id = 6;
  string status = 7;
  repeated string role_ids = 8;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

message ChangePasswordRequest {
  string user_id = 1;
  string old_password = 2;
  string new_password = 3;
}

message ChangePasswordResponse {
  bool success = 1;
}

// 部门管理消息
message CreateDepartmentRequest {
  string name = 1;
  string code = 2;
  string description = 3;
  string parent_id = 4;
  int32 sort = 5;
}

message CreateDepartmentResponse {
  Department department = 1;
}

message GetDepartmentRequest {
  string id = 1;
}

message GetDepartmentResponse {
  Department department = 1;
}

message ListDepartmentsRequest {
  int32 page = 1;
  int32 size = 2;
  string keyword = 3;
  string status = 4;
}

message ListDepartmentsResponse {
  repeated Department departments = 1;
  int64 total = 2;
}

message UpdateDepartmentRequest {
  string id = 1;
  string name = 2;
  string code = 3;
  string description = 4;
  string parent_id = 5;
  string status = 6;
  int32 sort = 7;
}

message UpdateDepartmentResponse {
  Department department = 1;
}

message DeleteDepartmentRequest {
  string id = 1;
}

message DeleteDepartmentResponse {
  bool success = 1;
}

message GetDepartmentTreeRequest {
  string parent_id = 1;
}

message GetDepartmentTreeResponse {
  repeated Department departments = 1;
}

// 角色管理消息
message CreateRoleRequest {
  string name = 1;
  string code = 2;
  string description = 3;
  repeated string permission_ids = 4;
}

message CreateRoleResponse {
  Role role = 1;
}

message GetRoleRequest {
  string id = 1;
}

message GetRoleResponse {
  Role role = 1;
}

message ListRolesRequest {
  int32 page = 1;
  int32 size = 2;
  string keyword = 3;
  string status = 4;
}

message ListRolesResponse {
  repeated Role roles = 1;
  int64 total = 2;
}

message UpdateRoleRequest {
  string id = 1;
  string name = 2;
  string code = 3;
  string description = 4;
  string status = 5;
}

message UpdateRoleResponse {
  Role role = 1;
}

message DeleteRoleRequest {
  string id = 1;
}

message DeleteRoleResponse {
  bool success = 1;
}

message AssignPermissionsRequest {
  string role_id = 1;
  repeated string permission_ids = 2;
}

message AssignPermissionsResponse {
  bool success = 1;
}

// 权限管理消息
message CreatePermissionRequest {
  string name = 1;
  string code = 2;
  string type = 3;
  string resource = 4;
  string action = 5;
  string parent_id = 6;
  string path = 7;
  string icon = 8;
  int32 sort = 9;
}

message CreatePermissionResponse {
  Permission permission = 1;
}

message GetPermissionRequest {
  string id = 1;
}

message GetPermissionResponse {
  Permission permission = 1;
}

message ListPermissionsRequest {
  int32 page = 1;
  int32 size = 2;
  string keyword = 3;
  string type = 4;
  string status = 5;
}

message ListPermissionsResponse {
  repeated Permission permissions = 1;
  int64 total = 2;
}

message UpdatePermissionRequest {
  string id = 1;
  string name = 2;
  string code = 3;
  string type = 4;
  string resource = 5;
  string action = 6;
  string parent_id = 7;
  string path = 8;
  string icon = 9;
  int32 sort = 10;
  string status = 11;
}

message UpdatePermissionResponse {
  Permission permission = 1;
}

message DeletePermissionRequest {
  string id = 1;
}

message DeletePermissionResponse {
  bool success = 1;
}

message GetPermissionTreeRequest {
  string parent_id = 1;
}

message GetPermissionTreeResponse {
  repeated Permission permissions = 1;
}

// AI 调度消息
message AnalyzeJobRequest {
  string job_id = 1;
  string context = 2;
  map<string, string> metadata = 3;
}

message AnalyzeJobResponse {
  string analysis = 1;
  string strategy = 2;
  int32 priority = 3;
  repeated string recommendations = 4;
}

message OptimizeScheduleRequest {
  repeated string job_ids = 1;
  string optimization_goal = 2;
  map<string, string> constraints = 3;
}

message OptimizeScheduleResponse {
  repeated ScheduleOptimization optimizations = 1;
  string summary = 2;
}

message ScheduleOptimization {
  string job_id = 1;
  string recommended_cron = 2;
  int32 priority = 3;
  string reason = 4;
}

message GetAIRecommendationsRequest {
  string type = 1;
  map<string, string> context = 2;
}

message GetAIRecommendationsResponse {
  repeated AIRecommendation recommendations = 1;
}

message AIRecommendation {
  string type = 1;
  string title = 2;
  string description = 3;
  string action = 4;
  int32 priority = 5;
}

// MCP 消息
message ListToolsRequest {
  string category = 1;
}

message ListToolsResponse {
  repeated MCPTool tools = 1;
}

message MCPTool {
  string name = 1;
  string description = 2;
  string category = 3;
  map<string, string> parameters = 4;
}

message CallToolRequest {
  string tool_name = 1;
  map<string, string> arguments = 2;
}

message CallToolResponse {
  bool success = 1;
  string result = 2;
  string error = 3;
}

message GetResourcesRequest {
  string type = 1;
  string filter = 2;
}

message GetResourcesResponse {
  repeated MCPResource resources = 1;
}

message MCPResource {
  string uri = 1;
  string name = 2;
  string description = 3;
  string type = 4;
  string content = 5;
}

// 执行状态
enum ExecutionStatus {
  PENDING = 0;
  RUNNING = 1;
  SUCCESS = 2;
  FAILED = 3;
  TIMEOUT = 4;
  CANCELLED = 5;
}

// 工作节点状态
enum WorkerStatus {
  OFFLINE = 0;
  ONLINE = 1;
  BUSY = 2;
  MAINTENANCE = 3;
}

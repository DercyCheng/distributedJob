{
    "info": {
        "name": "DistributedJob API Tests",
        "description": "A collection for testing the DistributedJob system APIs",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Health Checks",
            "item": [
                {
                    "name": "Health Check",
                    "request": {
                        "method": "GET",
                        "url": {
                            "raw": "{{baseUrl}}/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "health"
                            ]
                        },
                        "description": "Checks the health status of the system and its components"
                    },
                    "response": []
                },
                {
                    "name": "Service Shutdown",
                    "request": {
                        "method": "GET",
                        "url": {
                            "raw": "{{baseUrl}}/shutdown?wait=5",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "shutdown"
                            ],
                            "query": [
                                {
                                    "key": "wait",
                                    "value": "5"
                                }
                            ]
                        },
                        "description": "Gracefully shuts down the service after a specified wait time (in seconds)"
                    },
                    "response": []
                }
            ],
            "description": "Endpoints for checking the health and status of the service"
        },
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Login",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && jsonData.data.accessToken) {",
                                    "    pm.environment.set('accessToken', jsonData.data.accessToken);",
                                    "    pm.environment.set('refreshToken', jsonData.data.refreshToken);",
                                    "    pm.environment.set('userId', jsonData.data.userId);",
                                    "    console.log('Token saved to environment');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Login to the system to obtain access token"
                    },
                    "response": []
                },
                {
                    "name": "Get User Info",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/auth/userinfo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "userinfo"
                            ]
                        },
                        "description": "Get the current user's information and permissions"
                    },
                    "response": []
                },
                {
                    "name": "Refresh Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && jsonData.data.accessToken) {",
                                    "    pm.environment.set('accessToken', jsonData.data.accessToken);",
                                    "    if (jsonData.data.refreshToken) {",
                                    "        pm.environment.set('refreshToken', jsonData.data.refreshToken);",
                                    "    }",
                                    "    console.log('Token refreshed and saved to environment');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{refreshToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/refresh",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "refresh"
                            ]
                        },
                        "description": "Refresh the access token using the refresh token"
                    },
                    "response": []
                },
                {
                    "name": "Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"accessToken\": \"{{accessToken}}\",\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "logout"
                            ]
                        },
                        "description": "Logout from the system, invalidating the tokens"
                    },
                    "response": []
                }
            ],
            "description": "Authentication-related endpoints for login, logout, token management"
        },
        {
            "name": "Departments",
            "item": [
                {
                    "name": "Get Department List",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/departments?page=1&size=10",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "departments"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "size",
                                    "value": "10"
                                }
                            ]
                        },
                        "description": "Get paginated list of departments"
                    },
                    "response": []
                },
                {
                    "name": "Get Department Detail",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/departments/1",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "departments",
                                "1"
                            ]
                        },
                        "description": "Get details of a specific department by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Department",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && jsonData.data.id) {",
                                    "    pm.environment.set('newDepartmentId', jsonData.data.id);",
                                    "    console.log('Department ID saved: ' + jsonData.data.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"测试部门\",\n  \"description\": \"这是一个测试部门\",\n  \"parentId\": null,\n  \"status\": 1\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/departments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "departments"
                            ]
                        },
                        "description": "Create a new department"
                    },
                    "response": []
                },
                {
                    "name": "Update Department",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"更新后的测试部门\",\n  \"description\": \"这是一个更新后的测试部门\",\n  \"parentId\": null,\n  \"status\": 1\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/departments/{{newDepartmentId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "departments",
                                "{{newDepartmentId}}"
                            ]
                        },
                        "description": "Update an existing department"
                    },
                    "response": []
                },
                {
                    "name": "Delete Department",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/departments/{{newDepartmentId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "departments",
                                "{{newDepartmentId}}"
                            ]
                        },
                        "description": "Delete a department by ID"
                    },
                    "response": []
                }
            ],
            "description": "Department management endpoints"
        },
        {
            "name": "Users",
            "item": [
                {
                    "name": "Get User List",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/users?page=1&size=10&departmentId={{departmentId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "size",
                                    "value": "10"
                                },
                                {
                                    "key": "departmentId",
                                    "value": "{{departmentId}}",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get a paginated list of users, optionally filtered by department"
                    },
                    "response": []
                },
                {
                    "name": "Get User Detail",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/users/1",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                "1"
                            ]
                        },
                        "description": "Get details of a specific user by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && jsonData.data.id) {",
                                    "    pm.environment.set('newUserId', jsonData.data.id);",
                                    "    console.log('User ID saved: ' + jsonData.data.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\",\n  \"realName\": \"测试用户\",\n  \"email\": \"test@example.com\",\n  \"phone\": \"13800138000\",\n  \"departmentId\": 1,\n  \"roleId\": 2,\n  \"status\": 1\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ]
                        },
                        "description": "Create a new user"
                    },
                    "response": []
                },
                {
                    "name": "Update User",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"realName\": \"更新后的测试用户\",\n  \"email\": \"updated@example.com\",\n  \"phone\": \"13900139000\",\n  \"departmentId\": 1,\n  \"roleId\": 2,\n  \"status\": 1\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users/{{newUserId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                "{{newUserId}}"
                            ]
                        },
                        "description": "Update an existing user"
                    },
                    "response": []
                },
                {
                    "name": "Update User Password",
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"oldPassword\": \"password123\",\n  \"newPassword\": \"newpassword456\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users/{{newUserId}}/password",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                "{{newUserId}}",
                                "password"
                            ]
                        },
                        "description": "Update a user's password"
                    },
                    "response": []
                },
                {
                    "name": "Delete User",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/users/{{newUserId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                "{{newUserId}}"
                            ]
                        },
                        "description": "Delete a user by ID"
                    },
                    "response": []
                }
            ],
            "description": "User management endpoints"
        },
        {
            "name": "Roles and Permissions",
            "item": [
                {
                    "name": "Get Role List",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/roles?page=1&size=10",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "roles"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "size",
                                    "value": "10"
                                }
                            ]
                        },
                        "description": "Get a paginated list of roles"
                    },
                    "response": []
                },
                {
                    "name": "Get Role Detail",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/roles/1",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "roles",
                                "1"
                            ]
                        },
                        "description": "Get details of a specific role by ID"
                    },
                    "response": []
                },
                {
                    "name": "Get All Permissions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && Array.isArray(jsonData.data)) {",
                                    "    if (jsonData.data.length > 0) {",
                                    "        var permissionIds = jsonData.data.map(p => p.id);",
                                    "        pm.environment.set('permissionIds', JSON.stringify(permissionIds.slice(0, 3)));",
                                    "        console.log('Permission IDs saved: ' + permissionIds.slice(0, 3));",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/permissions",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "permissions"
                            ]
                        },
                        "description": "Get a list of all permissions in the system"
                    },
                    "response": []
                },
                {
                    "name": "Create Role",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && jsonData.data.id) {",
                                    "    pm.environment.set('newRoleId', jsonData.data.id);",
                                    "    console.log('Role ID saved: ' + jsonData.data.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "var permissionIds = JSON.parse(pm.environment.get('permissionIds') || '[]');",
                                    "pm.environment.set('tempPermissions', JSON.stringify(permissionIds.map(id => ({ id }))))"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"测试角色\",\n  \"description\": \"这是一个测试角色\",\n  \"permissions\": {{tempPermissions}},\n  \"status\": 1\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/roles",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "roles"
                            ]
                        },
                        "description": "Create a new role with selected permissions"
                    },
                    "response": []
                },
                {
                    "name": "Update Role",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "var permissionIds = JSON.parse(pm.environment.get('permissionIds') || '[]');",
                                    "pm.environment.set('tempPermissions', JSON.stringify(permissionIds.map(id => ({ id }))))"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"更新后的测试角色\",\n  \"description\": \"这是一个更新后的测试角色\",\n  \"permissions\": {{tempPermissions}},\n  \"status\": 1\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/roles/{{newRoleId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "roles",
                                "{{newRoleId}}"
                            ]
                        },
                        "description": "Update an existing role"
                    },
                    "response": []
                },
                {
                    "name": "Delete Role",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/roles/{{newRoleId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "roles",
                                "{{newRoleId}}"
                            ]
                        },
                        "description": "Delete a role by ID"
                    },
                    "response": []
                }
            ],
            "description": "Role and permission management endpoints"
        },
        {
            "name": "Tasks",
            "item": [
                {
                    "name": "Get Task List",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/tasks?page=1&size=10&departmentId={{departmentId}}&type=HTTP",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "size",
                                    "value": "10"
                                },
                                {
                                    "key": "departmentId",
                                    "value": "{{departmentId}}",
                                    "disabled": true
                                },
                                {
                                    "key": "type",
                                    "value": "HTTP",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get a paginated list of tasks, optionally filtered by department and type"
                    },
                    "response": []
                },
                {
                    "name": "Get Task Detail",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{taskId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{taskId}}"
                            ]
                        },
                        "description": "Get details of a specific task by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create HTTP Task",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && jsonData.data.id) {",
                                    "    pm.environment.set('newHttpTaskId', jsonData.data.id);",
                                    "    console.log('HTTP Task ID saved: ' + jsonData.data.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"测试HTTP任务\",\n  \"description\": \"这是一个测试HTTP任务\",\n  \"departmentId\": 1,\n  \"cron\": \"0 0 * * *\",\n  \"url\": \"https://httpbin.org/get\",\n  \"httpMethod\": \"GET\",\n  \"headers\": {\"Content-Type\": \"application/json\"},\n  \"body\": \"\",\n  \"retryCount\": 3,\n  \"retryInterval\": 60,\n  \"timeout\": 30,\n  \"fallbackURL\": \"https://httpbin.org/status/200\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/http",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "http"
                            ]
                        },
                        "description": "Create a new HTTP task"
                    },
                    "response": []
                },
                {
                    "name": "Create GRPC Task",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "if (jsonData.code === 0 && jsonData.data && jsonData.data.id) {",
                                    "    pm.environment.set('newGrpcTaskId', jsonData.data.id);",
                                    "    console.log('GRPC Task ID saved: ' + jsonData.data.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"测试GRPC任务\",\n  \"description\": \"这是一个测试GRPC任务\",\n  \"departmentId\": 1,\n  \"cron\": \"0 0 * * *\",\n  \"grpcService\": \"TestService\",\n  \"grpcMethod\": \"TestMethod\",\n  \"grpcParams\": \"{\\\"test\\\": \\\"value\\\"}\",\n  \"retryCount\": 3,\n  \"retryInterval\": 60,\n  \"timeout\": 30\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/grpc",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "grpc"
                            ]
                        },
                        "description": "Create a new GRPC task"
                    },
                    "response": []
                },
                {
                    "name": "Update HTTP Task",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"更新后的测试HTTP任务\",\n  \"description\": \"这是一个更新后的测试HTTP任务\",\n  \"departmentId\": 1,\n  \"cron\": \"0 0 * * *\",\n  \"url\": \"https://httpbin.org/get?updated=true\",\n  \"httpMethod\": \"GET\",\n  \"headers\": {\"Content-Type\": \"application/json\", \"X-Updated\": \"true\"},\n  \"body\": \"\",\n  \"retryCount\": 5,\n  \"retryInterval\": 30,\n  \"timeout\": 60,\n  \"fallbackURL\": \"https://httpbin.org/status/200\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/http/{{newHttpTaskId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "http",
                                "{{newHttpTaskId}}"
                            ]
                        },
                        "description": "Update an existing HTTP task"
                    },
                    "response": []
                },
                {
                    "name": "Update GRPC Task",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"更新后的测试GRPC任务\",\n  \"description\": \"这是一个更新后的测试GRPC任务\",\n  \"departmentId\": 1,\n  \"cron\": \"0 0 * * *\",\n  \"grpcService\": \"TestServiceUpdated\",\n  \"grpcMethod\": \"TestMethodUpdated\",\n  \"grpcParams\": \"{\\\"test\\\": \\\"updated_value\\\"}\",\n  \"retryCount\": 5,\n  \"retryInterval\": 30,\n  \"timeout\": 60\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/grpc/{{newGrpcTaskId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "grpc",
                                "{{newGrpcTaskId}}"
                            ]
                        },
                        "description": "Update an existing GRPC task"
                    },
                    "response": []
                },
                {
                    "name": "Update Task Status",
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"status\": 2\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{newHttpTaskId}}/status",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{newHttpTaskId}}",
                                "status"
                            ]
                        },
                        "description": "Update a task's status (1: active, 2: paused, 3: deleted)"
                    },
                    "response": []
                },
                {
                    "name": "Delete HTTP Task",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{newHttpTaskId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{newHttpTaskId}}"
                            ]
                        },
                        "description": "Delete an HTTP task by ID"
                    },
                    "response": []
                },
                {
                    "name": "Delete GRPC Task",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{newGrpcTaskId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{newGrpcTaskId}}"
                            ]
                        },
                        "description": "Delete a GRPC task by ID"
                    },
                    "response": []
                }
            ],
            "description": "Task management endpoints for both HTTP and GRPC tasks"
        },
        {
            "name": "Records",
            "item": [
                {
                    "name": "Get Record List",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/records?page=1&size=10&year={{year}}&month={{month}}&taskId={{taskId}}&departmentId={{departmentId}}&success=1",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "records"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "size",
                                    "value": "10"
                                },
                                {
                                    "key": "year",
                                    "value": "{{year}}"
                                },
                                {
                                    "key": "month",
                                    "value": "{{month}}"
                                },
                                {
                                    "key": "taskId",
                                    "value": "{{taskId}}",
                                    "disabled": true
                                },
                                {
                                    "key": "departmentId",
                                    "value": "{{departmentId}}",
                                    "disabled": true
                                },
                                {
                                    "key": "success",
                                    "value": "1",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get a paginated list of execution records, filtered by various criteria"
                    },
                    "response": []
                },
                {
                    "name": "Get Record Detail",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/records/{{recordId}}?year={{year}}&month={{month}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "records",
                                "{{recordId}}"
                            ],
                            "query": [
                                {
                                    "key": "year",
                                    "value": "{{year}}"
                                },
                                {
                                    "key": "month",
                                    "value": "{{month}}"
                                }
                            ]
                        },
                        "description": "Get details of a specific execution record by ID, year, and month"
                    },
                    "response": []
                },
                {
                    "name": "Get Record Statistics",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/records/stats?year={{year}}&month={{month}}&taskId={{taskId}}&departmentId={{departmentId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "records",
                                "stats"
                            ],
                            "query": [
                                {
                                    "key": "year",
                                    "value": "{{year}}"
                                },
                                {
                                    "key": "month",
                                    "value": "{{month}}"
                                },
                                {
                                    "key": "taskId",
                                    "value": "{{taskId}}",
                                    "disabled": true
                                },
                                {
                                    "key": "departmentId",
                                    "value": "{{departmentId}}",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get statistics for execution records, optionally filtered by task and department"
                    },
                    "response": []
                }
            ],
            "description": "Execution record query and statistics endpoints"
        },
        {
            "name": "Dashboard",
            "item": [
                {
                    "name": "Get Dashboard Overview",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/dashboard/overview?departmentId={{departmentId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "dashboard",
                                "overview"
                            ],
                            "query": [
                                {
                                    "key": "departmentId",
                                    "value": "{{departmentId}}",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get dashboard overview data, optionally filtered by department"
                    },
                    "response": []
                }
            ],
            "description": "Dashboard API endpoints for system overview and statistics"
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Set current year and month for record-related requests",
                    "var now = new Date();",
                    "pm.environment.set('year', now.getFullYear());",
                    "pm.environment.set('month', now.getMonth() + 1);",
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Global test script that runs after every request",
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Response has correct format\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('code');",
                    "    pm.expect(jsonData).to.have.property('message');",
                    "});",
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:8080/v1",
            "type": "string"
        }
    ]
}